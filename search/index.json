[{"content":"仅供复习用\n数据库的创建和管理 --创建数据库 CREATEDATABASEdatabase_nameON(NAME=logical_file_name,FILENAME...)LOGON(NAME=logical_file_name,FILENAME...)--修改数据课信息 ALTERDATABASEdatabase_name{ADDFILE\u0026lt;filespec\u0026gt;--添加数据文件 MODIFYFILE\u0026lt;filespec\u0026gt;--修改数据文件 MODIFYNAME=new_dbname--修改数据库名 }--手动收缩数据库 DBSSSHRINKDATABASE(database_name,[target_percent])--修改数据库名 sp_renamedb原,新--删除数据库 DROPDATABASEdbname--查看数据库信息 sp_helpdb[数据库名]数据表的创建和管理 --创建表 CREATETABLE\u0026lt;表名\u0026gt;(\u0026lt;列名\u0026gt;\u0026lt;数据类型\u0026gt;[NULL|NOTNULL][IDENTITY[(seed,increment)]][{\u0026lt;约束\u0026gt;}])--修改表 ALTERTABLE\u0026lt;表名\u0026gt;(ADD\u0026lt;列定义\u0026gt;--添加字段 DROPCOLUMN\u0026lt;列名\u0026gt;--删除字段 ALTERCOLUMN\u0026lt;列名\u0026gt;\u0026lt;属性\u0026gt;--修改列属性 )--修改列名 Sp_rename\u0026#39;Student.Sdept\u0026#39;,\u0026#39;系别\u0026#39;,\u0026#39;column\u0026#39;以下用实列代替标准写法\n--删除表 DROPTABLECourse--改表名 sp_rename\u0026#39;Student\u0026#39;,\u0026#39;Newstudent\u0026#39;约束 在SQL Server中有五种约束：\n 主键约束（Primary Key） 唯一性约束（Unique） 检查约束（Check） 默认值约束（Default） 外键约束（Foreign Key）  而根据声明的形式又可分为列级约束,表级约束.\n关于二者的区别，直接用图吧。\n\r二者区别\r\n由上图所知主键、外键、唯一、检查这四项，既可以创建列约束，也可以创建表约束。而缺省和非空只能创建列约束。\n约束创建  主键约束  --在创建时创建 CREATETABLECourse(Conchar(6)NOTNULLPRIMARYKEY,)--使用表级创建 CREATETABLECourse(Conchar(6)NOTNULL,Cityvarchar(255),CONSTRAINTpk_ScPRIMARYKEY(Con),CONSTRAINTpk_CCPRIMARYKEY(Con,City))--在现有表创建 ALTERTABLESCADDCONSTRAINTPK_SPRIMARYKEY(Con,City)--删除约束 DROPCONSTRAINTPK_S 似乎在SQL Server 2012中可以允许不指定约束名，而直接创建，但为了规范还是指定约束名。\n 外键约束  --在创建时创建 CREATETABLESC(SonintFOREIGNKEYREFERENCESstudent(Sno))--使用表级创建 CREATETABLESC(SonintNOTNULL,Cityvarchar(255),CONSTRAINTfk_pFOREIGNKEY(Sno)REFERENCESstudent(Sno))--在现有表创建 --不指定名 ALTERTABLESCADDFOREIGNKEY(Con)REFERENCESstudent(Cno)--指定名 ALTERTABLESCADDCONSTRAINTfk_perFOREIGNKEY(Con)REFERENCESstudent(Cno)唯一约束   唯一约束与主键约束的区别在于可以为NULL 可以为多个  --在创建时创建 CREATETABLESC(SonintUNIQUE)--使用表级创建 CREATETABLESC(SonintNOTNULL,Cityvarchar(255),CONSTRAINTuc_pUNIQUE(Son,City))--在现有表创建 --不指定名 ALTERTABLESCADDUNIQUE(Sno)--指定名 ALTERTABLESCADDCONSTRAINTuc_pUNIQUE(Cno)检测约束  --在创建时创建 CREATETABLESC(SonintCHECK(Sno\u0026gt;0))--使用表级创建 CREATETABLESC(SonintNOTNULL,Cityvarchar(255),CONSTRAINTuc_pUNIQUE(Son\u0026gt;0andCity=\u0026#39;changde\u0026#39;))--在现有表创建 --不指定名 ALTERTABLESCADDCHECK(Sno\u0026gt;0)--指定名 ALTERTABLESCADDCONSTRAINTuc_pCHECK(Cno\u0026gt;0)默认值约束  CREATETABLEPersons(Id_PintNOTNULL,Cityvarchar(255)DEFAULT\u0026#39;Sandnes\u0026#39;)--还可以这样玩 CREATETABLEOrders(OrderDatedateDEFAULTGETDATE())--ALTER ALTERTABLEPersonsADDDEFAULT\u0026#39;llala\u0026#39;FORCity小小总结 --创建时 CnointPRIMARYKEYCnointFOREIGNKEYREFERENCESStudent(Cno)CnointUNIQUECnointCHECK(Cno\u0026gt;0)CnointDEFAULT\u0026#39;607\u0026#39;--表级约束 CONSTRAINT\u0026lt;约束名\u0026gt;PRIMARYKEY(COLUMN,)CONSTRAINT\u0026lt;约束名\u0026gt;FOREIGNKEYSnoREFERENCESstudent(Sno)CONSTRAINT\u0026lt;约束名\u0026gt;UNIQUE(Sno)CONSTRAINT\u0026lt;约束名\u0026gt;CHECK(Cno\u0026gt;0andCity=\u0026#39;la\u0026#39;)CONSTRAINT\u0026lt;约束名\u0026gt;DEFAULT\u0026#39;男\u0026#39;FORSex--以上CONSTRAINT和约束名均可省略 --事后型 ALTERTABLE\u0026lt;表名\u0026gt;ADDCONSTRAINT\u0026lt;约束名\u0026gt;PRIMARYKEY(Con,City)ADDCONSTRAINT\u0026lt;约束名\u0026gt;FOREIGNKEYSnoREFERENCESStudent(Sno)ADDCONSTRAINT\u0026lt;约束名\u0026gt;UNIQUE(Con)ADDCONSTRAINT\u0026lt;约束名\u0026gt;CHECK(Cno\u0026gt;0andCity=\u0026#39;la\u0026#39;)ADDCONSTRAINT\u0026lt;约束名\u0026gt;DEFAULT\u0026#39;男\u0026#39;FORSex数据操作 --增 INSERTINTO表名称VALUES(值1,值2,....)INSERTINTOtable_name(列1,列2,...)VALUES(值1,值2,....)--也可插入子查询 INSERTINTOtable_nameSELECTcolumn_listFROMtable--改 UPDATEPersonSETFirstName=\u0026#39;Fred\u0026#39;WHERELastName=\u0026#39;Wilson\u0026#39;--注意这里的WHERE,是修改条件，若无是对所有的值操作 UPDATEPersonSETAddress=\u0026#39;Zhongshan 23\u0026#39;,City=\u0026#39;Nanjing\u0026#39;WHERELastName=\u0026#39;Wilson\u0026#39;--删 DELETEFROMPersonWHERELastName=\u0026#39;Wilson\u0026#39;--删除所有数据，但保留结构 DELETEFROMtable_name--或是 DELETE*FROMtable_name数据查询 讲细节\n--移除重复项 SELECTDISTINCTSdeptfromstudent--显示前几或前百分比 SELECTTOPN*fromstudentSELECTTOPNPERCENT*fromstudent--更改列标题的三种方法 SELECTSdept系名fromstudentSELECTSdeptas系名fromstudentSELECT系名=Sdeptfromstudent--加入新表 SELECTSnoINTOnew_tablefromstudent--范围 SELECT*FROMstudentwhereSagebetween20and22--注意这里是闭区间 --模糊匹配 %任意长度字符_单个任意字符[]括号内任意[^]除括号内任意[NOT]LIKE\u0026#39;AB%\u0026#39;[NOT]LIKE\u0026#39;[AB]%\u0026#39;[NOT]LIKE\u0026#39;_AB%\u0026#39;--非空 ISNOTNULLISNULL--排列 orderbyScoreASC--正序 orderbyScoreDESC--逆序 --多个排序，若相同按下一个order排 COMPUTE子句，可以同时显示明细和统计\nSELECT*FROMStudentcomputeavg(Sage)有分组统计时加by，同时要有order by\nSELECT*FROMstudentorderbysdeptcomputeavg(sage)bysdept这里COMPUTE语句后跟聚合函数，若分组则加by\n相关子查询 对于嵌套查询中的单值、多值查询是容易理解的，但是对于相关子查询是不容易理解的。\n关键在于查询的流程不一样了。\n--给定SQL语句 select*fromstudentwhere[]groupby[]having[]orderby[]$$ \\begin{aligned} \u0026amp;processing\\ like\\ this.\\cr \u0026amp;From \\to Where \\to Group\\ by\\to Having\\to Select\\to Order\\ By \\end{aligned} $$\n--但是对于一个相关子查询就不一样了 select*fromstudentass1wheresage\u0026gt;(selectavg(sage)fromstudentass2wheres1.sdept=s2.sdept)$$ \\begin{aligned} \u0026amp;It\u0026rsquo;s\\ different\\ now. \\cr \u0026amp;step\\ 1. select\\ one\\ from\\ student\\ as\\ s1\\cr \u0026amp;step\\ 2. from\\ student\\ as\\ s2\\cr \u0026amp;step\\ 3. where\\ s1.sdept=s2.sdept\\cr \u0026amp;step\\ 4. select\\ AVG()\\cr \u0026amp;step\\ 5. where\\ sage\u0026gt;AVG()\\cr \u0026amp;step\\ 6. ture\\ next \\cr \u0026amp;step\\ 7. back\\ step\\ 1 \\end{aligned} $$\n所以相关子查询先从外查询取一条数据，再从子查询返回满足条件的数据，然后利用该数据再次查询。\n子查询还有一个相关函数\n[NOT]EXISTS(子查询)SELECT*FROMstudentwhereexists(select*fromscwherecno=2andsno=student.sno)--在这里exists判断了子查询是否为空，若为空，不返回值，若不为空，返回select * 聚合函数类    函数名 功能 函数名 功能     AVG 平均 COUNT 计数   SUM 求和 MIN 最小   COUNT(*) 总行数 MAX 最大    数据库编程技术基础 变量声明\ndeclare@nameint,@mailvarchar(20),@agesmallint变量赋值\nset@name=3select@name=表达式 注意这里的select语句，若没有from ,where就是赋值语句，但是若有这些，则将最后一个数值赋给它\n 语句语法\nIF逻辑表达式\u0026lt;句子\u0026gt;else\u0026lt;句子\u0026gt;由于$SQL\\ Server$只能判断一句话，所以要用$begin\\cdots end$包裹(梦回PASCAL)。\nGOTO标签名语句标签名:语句GOTO大法好\n--延时 WAITFORDELAY\u0026#39;00:00:40\u0026#39;--延时多少时间 WAITFORTIME\u0026#39;16:33:00\u0026#39;--延时到什么时候 CASE第一种写法\n--CASE表达式 CASE输入表达式WHEN表达式1THEN结果1WHEN表达式2THEN结果2WHEN表达式3THEN结果3ELSE其他结果END这种CASE的逻辑是，判断输入表达式是否满足表达式，若满足则退出，若都不满足则去ELSE\n第二种\nCASEWHEN逻辑表达式1THEN结果表达式1WHEN逻辑表达式2THEN结果表达式2WHEN逻辑表达式3THEN结果表达式3[...n]ELSE其他结果表达式END二者的区别在于第一种只能对一个表达式判断，而后者则能对不同对象进行逻辑判断。\n函数\n--随机数 RAND([s])/*该函数生成float随机数，在0~1之间，s(seed)为提供种子值的整数表达式 种子为随机数选取的“位置”，若规定种子则每次都一样。 边界函数\nFLOOR(数值表达式)--地板函数，返回小于或等于一个数的最大整数 CEILING(数值表达式)--天花板函数，返回大于或等于数值的最小整数 时间函数\nDATEADD(datepart,数值，日期)--返回增加一个时间间隔后的日期结果 DATEDIFF(datepart,日期1,日期2)--返回两个日期的间隔 DATENAME(datepart,日期)--返回日期的文本表示 GETDATE()--返回系统时间 DAY()YEAR()而datepart是规定返回的日期和时间的组成部分。\n视图和索引的应用  视图是更新的，是动态的 将会考看图写代码 其中要注意列是否输出，等细节 如果视图中的某一列是函数、数学表达式、常量或来自多个表的列名相同，必须有名字  视图的加密\nwithencryptioncreateview名asdropview名存储过程的应用 CREATEPROC名字[{@参数名称参数数据类型}[=默认值][OUTPUT]][,...n][withenryption]ASsql_statement注意这里的变量没有先用$declare$声明而是直接用\n储存过程的使用\nEXEC[UTE]存储过程名--而带参数的运用 exec名字@name=\u0026#39;PuQing\u0026#39;,@age=\u0026#39;1\u0026#39;--还可以使用位置输入 exec名字\u0026#39;PuQing\u0026#39;,\u0026#39;1\u0026#39;--若有输出名，则 exec名字@nameoutputdropproc名删除相关 DROPdatabase-droptable-dropconstraint-deletefromwheredropproc-dropview-改名相关 sp_renamedbsp_rename\u0026#39;Student.Sdept\u0026#39;，\u0026#39;系别\u0026#39;,\u0026#39;column\u0026#39;sp_rename\u0026#39;旧\u0026#39;，\u0026#39;x\u0026#39;END.\n","date":"2021-06-02T00:00:00Z","image":"https://puqing.work/p/sql-server%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/Date_huc08d38fd210c05b46744d20f5993585f_160652_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/sql-server%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/","title":"SQL Server数据库复习"},{"content":"一个方程的情形  对于方程$F(x,y)=0$，若函数具有连续的偏导数，且取定$y=y(x)$，有偏导数： $$ \\begin{aligned} \\frac{dy}{dx}=-\\frac{F_{x}}{F_{y}}. \\end{aligned}\\tag{1} $$\n 下面我们来尝试推导该式： $$ \\begin{aligned} F(x,y)=0 \\cr F(x,y(x))=0 \\cr \\end{aligned}\\tag{2} $$\n 此时变成复合函数求导数，对两边对$x$求偏导得： $$ \\begin{aligned} \\frac{dF}{dx}+\\frac{dF}{dy}\\cdot\\frac{dy}{dx}\u0026amp;=0 \\cr \\frac{dy}{dx}=-\\frac{\\frac{dF}{dx}}{\\frac{dF}{dy}}\\cr \\frac{dy}{dx}=-\\frac{F_{x}}{F_{y}}. \\end{aligned}\\tag{3} $$\n 若是多变量时有如下推导过程：\n 假设$z$可以表示为$z=z(x,y)$，则有： $$ \\begin{gathered} F(x,y,z)=0\\cr F(x,y,z(x,y))=0\\cr \\frac{\\partial{F}}{\\partial x}\\cdot\\frac{dx}{dx}+\\frac{\\partial{F}}{\\partial y}\\cdot\\frac{dy}{dx}+\\frac{\\partial{F}}{\\partial z}\\cdot\\frac{\\partial z}{\\partial x}=0 \\end{gathered} $$\n 实际上我们对$x$求偏导，把$y$视为常量，所以$\\frac{dy}{dx}=0$，而这里这样写是为了让你回忆起它完整的过程。所以： $$ \\frac{\\partial z}{\\partial x}=-\\frac{F_{x}}{F_{z}},\\tag{4} $$\n 同理对于$y$，可得： $$ \\frac{\\partial z}{\\partial y}=-\\frac{F_{y}}{F_{z}}.\\tag{5} $$\n 以上我们便推导出了隐函数求偏导的公式。\n 实际上我们还可以用全微分的形式不变性来求偏导数。\n$$ \\begin{gathered} F(x,y,z)=0\\cr dF=0\\cr \\frac{\\partial F}{\\partial x}dx+\\frac{\\partial F}{\\partial y}dy+\\frac{\\partial F}{\\partial z}dz=0\\cr dz=-\\frac{F_{x}}{F_{z}}dx+(-\\frac{F_{y}}{F_{z}})dy \\end{gathered}\\tag{6} $$\n$e.g.$加深印象\n 有$F(x-y,y-z,z-x)=0$，$F$具有连续的一阶偏导数，求$\\frac{\\partial z}{\\partial x}+\\frac{\\partial z}{\\partial y}$.\n 下面用两种方法求解：\n 根据公式： $$ \\begin{gathered} \\begin{cases} \\frac{\\partial z}{\\partial x}=-\\frac{F_{x}}{F_{z}}\\cr F_{x}=F_{1}'-F_{3}'\\cr F_{z}=-F_{2}'+F_{3}' \\end{cases}, \\begin{cases} \\frac{\\partial z}{\\partial y}=-\\frac{F_{y}}{F_{z}}\\cr F_{y}=-F_{1}'+F_{2}'\\cr F_{z}=-F_{2}'+F_{3}' \\end{cases}\\cr \\Downarrow \\cr \\frac{\\partial z}{\\partial x}=\\frac{F_{1}'-F_{3}'}{F_{2}'-F_{3}'},\\frac{\\partial z}{\\partial y}=\\frac{-F_{1}'+F_{2}'}{F_{2}'-F_{3}'}\\cr \\Downarrow \\cr \\frac{\\partial z}{\\partial x}+\\frac{\\partial z}{\\partial y}=1. \\end{gathered} $$ 全微分 $$ \\begin{gathered} dF(x-y,y-z,z-x)=0\\cr F_{1}' d(x-y)+F_{2}' d(y-z)+F_{3}' d(z-x)=0\\cr F_{1}' (dx-dy)+F_{2}' (dy-dz)+F_{3}' (dz-dx)=0\\cr (F_{1}'-F_{3}')dx+(F_{2}'-F_{1}')dy=(F_{2}'-F_{3}')dz\\cr dz=\\frac{F_{1}'-F_{3}'}{F_{2}'-F_{3}'}dx+\\frac{F_{2}'-F_{1}'}{F_{2}'-F_{3}'}dy\\cr \\frac{\\partial z}{\\partial x}+\\frac{\\partial z}{\\partial y}=1. \\end{gathered} $$  方程组的情形 关于方程组的解的构成 对于$n$个$m$个未知数的方程，能够组成多少个几元方程？\n这里不证，直接给结论\n对于$n$个$m$个未知数的方程，能够组成$n$个$m-n$元方程\n$e.g.$ $$ \\begin{cases} F(x,y,u,v)=0,\\cr G(x,y,u,v)=0.\\cr \\end{cases} $$ 可以组成两个二元方程，即 $$ \\begin{cases} u=u(x,y)\\cr v=v(x,y)\\cr \\end{cases},etc. $$\n公式推导 设$F(x,y,u,v)=0、G(x,y,u,v)=0$在点$P(x,y,u,v)$的某一邻域内具有对各个变量的连续偏导数。 $$ \\begin{cases} F(x,y,u,v)=0,\\cr G(x,y,u,v)=0.\\cr \\end{cases} $$ 对$x$求偏导数 $$ \\begin{gathered} \\begin{cases} F_{x}+F_{u}\\frac{\\partial u}{\\partial x}+F_{v}\\frac{\\partial v}{\\partial x}=0,\\cr G_{x}+G_{u}\\frac{\\partial u}{\\partial x}+G_{v}\\frac{\\partial v}{\\partial x}=0. \\end{cases}\\cr \\Downarrow \\cr \\begin{cases} F_{u}\\frac{\\partial u}{\\partial x}+F_{v}\\frac{\\partial v}{\\partial x}=-F_{x},\\cr G_{u}\\frac{\\partial u}{\\partial x}+G_{v}\\frac{\\partial v}{\\partial x}=-G_{x}. \\end{cases}\\cr \\end{gathered} $$ 使用$Cramer$(克拉默)法则可求解上述线性方程组。 $$ \\begin{aligned} \\frac{\\partial u}{\\partial x}=\\frac{ \\begin{vmatrix} -F_{x} \u0026amp;F_{v} \\cr -G_{x} \u0026amp;F_{v} \\end{vmatrix} }{ \\begin{vmatrix} F_{u} \u0026amp; F_{v}\\cr G_{u} \u0026amp; G_{v} \\end{vmatrix}}, \\frac{\\partial v}{\\partial x}=\\frac{ \\begin{vmatrix} F_{u} \u0026amp;-F_{x} \\cr G_{u} \u0026amp;-G_{x} \\end{vmatrix} }{ \\begin{vmatrix} F_{u} \u0026amp; F_{v}\\cr G_{u} \u0026amp; G_{v} \\end{vmatrix}} \\end{aligned}. $$ 同理，可解出$\\frac{\\partial u}{\\partial y}、\\frac{\\partial v}{\\partial y}$ $$ \\begin{aligned} \\frac{\\partial u}{\\partial y}=\\frac{ \\begin{vmatrix} -F_{y} \u0026amp;F_{v} \\cr -G_{y} \u0026amp;F_{v} \\end{vmatrix} }{ \\begin{vmatrix} F_{u} \u0026amp; F_{v}\\cr G_{u} \u0026amp; G_{v} \\end{vmatrix}}, \\frac{\\partial v}{\\partial x}=\\frac{ \\begin{vmatrix} F_{u} \u0026amp;-F_{y} \\cr G_{u} \u0026amp;-G_{y} \\end{vmatrix} }{ \\begin{vmatrix} F_{u} \u0026amp; F_{v}\\cr G_{u} \u0026amp; G_{v} \\end{vmatrix}} \\end{aligned}. $$ 若引入雅各比($Jacobian\\ Determinant$)行列式 $$ J=\\frac{\\partial(F,G)}{\\partial(u,v)}= \\begin{vmatrix} \\frac{\\partial F}{\\partial u} \u0026amp; \\frac{\\partial F}{\\partial v}\\cr \\frac{\\partial G}{\\partial u} \u0026amp;\\frac{\\partial G}{\\partial v} \\end{vmatrix}\\tag{7} $$ 则上述过程可简化为 $$ \\begin{gathered} \\frac{\\partial u}{\\partial x}=-\\frac{1}{J}\\frac{\\partial(F,G)}{\\partial(x,v)},\\cr \\frac{\\partial v}{\\partial x}=-\\frac{1}{J}\\frac{\\partial(F,G)}{\\partial(u,x)},\\cr \\frac{\\partial u}{\\partial y}=-\\frac{1}{J}\\frac{\\partial(F,G)}{\\partial(y,v)},\\cr \\frac{\\partial v}{\\partial y}=-\\frac{1}{J}\\frac{\\partial(F,G)}{\\partial(u,y)}. \\end{gathered}\\tag{8} $$ 小清十分弱鸡啊，本来$Cramer\u0026rsquo;s\\ Rule$很清晰了，一用$Jacobi$行列式就复杂无比，难记。下面简述雅各比行列式的含义**注:以下是个人看待，并无完备推导，选择接受。**\n雅各比行列式 考虑这样一种变换 $$ \\begin{bmatrix} u \\cr v \\end{bmatrix}= \\begin{bmatrix} u(x,y) \\cr v(x,y) \\end{bmatrix} $$ 即不再是线性变换而是非线性变换，则若讨论该变换张成空间的面积微元，如何思考？\n上图即是非线性的映射，这里需要注意的是虽然是非线性的，但是考虑面积微元时是看成直线。\n先来看$dx$如何变化的吧\n $dx$在$x$轴方向是由$v(x,y)$引起的，在$y$轴方向是由$u(x,y)$引起的。  ","date":"2021-05-29T00:00:00Z","image":"https://puqing.work/p/%E9%9A%90%E5%87%BD%E6%95%B0%E6%B1%82%E5%AF%BC/orange_hu9f49ba465bfa2c9b696be5b283f5e06e_99511_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/%E9%9A%90%E5%87%BD%E6%95%B0%E6%B1%82%E5%AF%BC/","title":"隐函数求导"},{"content":"引言  在定积分的计算中，使用积分区域的对称性和奇偶性可以简化计算。而这一结论进行推广后，还可以简化二重积分…、三重积 分，以及曲线积分和曲面积分的计算。\n二重积分的轮换不变性 \r定理的说明\r\n","date":"2021-05-27T00:00:00Z","image":"https://puqing.work/p/%E5%85%B3%E4%BA%8E%E7%A7%AF%E5%88%86%E7%9A%84%E8%BD%AE%E6%8D%A2%E4%B8%8D%E5%8F%98%E6%80%A7/yellow_hu08afc9d3655fc8a416d2ec76066dda1d_99457_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/%E5%85%B3%E4%BA%8E%E7%A7%AF%E5%88%86%E7%9A%84%E8%BD%AE%E6%8D%A2%E4%B8%8D%E5%8F%98%E6%80%A7/","title":"关于积分的轮换不变性"},{"content":"理解卷积   在泛函分析中，卷积（又称叠积（convolution）、褶积或旋积），是透过两个函数 f 和 g 生成第三个函数的一种数学算子，表征函数 f 与经过翻转和平移的 g 的乘积函数所围成的曲边梯形的面积。\n  以上源自卷积 - 维基百科的介绍。\n定义\n设$f(x)、g(x)$是定义在$\\mathbb{R}^{n}$上的可测函数，$f$与$g$的卷积记作$f\\ast g$，它是其中一个函数翻转，并平移后，与另一个函数的乘积的积分，是一个对平移量的函数，有\n连续形式： $$ \\begin{gathered} (f\\ast g)(t)\\overset{def}{=}\\int_{-\\infty}^{+\\infty}f(\\tau)g(t-\\tau)d\\tau \\end{gathered} $$\n离散形式： $$ \\begin{gathered} (f\\ast g)(t)=\\sum_{\\tau=-\\infty}^{\\infty}f(\\tau)g(t-\\tau) \\end{gathered} $$ 🤔这个式子可能有点难以理解，下面将通过几个例子说明\n 不过注意的是下面便于理解的方式都是建立在丢弃了什么的基础上的，若想进一步理解，请学习相关课程\n 从一个小球开始  本篇文章源自Understanding Convolutions作者的这种思路非常巧妙。\n  想象一个小球从一定高度落到地面（地面为一维），如果你把一个球丢出去，然后再从落地的地方再扔出去，那么它距离原始点的距离$C$的可能性有多大？\n 分析一下这个过程。在第一次掉落后，它会以$f(a)$的概率落在离起点$a$个单位距离的地方，其中$f$为概率分布。\n 在第一次下落后，再从上一次下落的地方以另一个高度扔下去。以新起点滚动的$b$单位的概率是$g(b)$，其中$g$可能是不同的分布。如同下图所示。\n 如果我们固定了第一次下落的结果，这样我们就知道了球移动的距离$a$，对于球移动的总距离$c$，第二次下落的距离也固定在$b$，其中$a+b=c$。所以这个发生的概率就是$f(a)\\cdot g(b)$。\n 让我们看一下更加具体的例子吧。我们想要总距离$c$等于3，如果第一次$a=2$，则第二次必定$b=1$，则概率便是$f(2)\\cdot g(1)$。\n 但是，很明显不可能只有这一种情况，只要$a+b=3$，都是可以的，如下面两种情况。\n 概率分别是$f(1)\\cdot g(2)$和$f(0)\\cdot g(3)$。\n 为了求球到达$c$的总距离的总可能性，我们应该考虑将所有可能的方法求和。即如下： $$ \\begin{gathered} \\dots f(0)\\cdot g(3)+f(1)\\cdot g(2)+f(2)\\cdot g(1) \\dots \\end{gathered} $$ 更加便捷的写法为： $$ \\begin{gathered} \\sum_{a+b=c}{f(a)\\cdot g(b)} \\end{gathered} $$ 这实际上就是在做一个卷积！特别地，在$c$处求$f\\ and\\ g$的卷积定义为： $$ \\begin{gathered} (f\\ast g)(c)=\\sum_{a+b=c}{f(a)\\cdot g(b)} \\end{gathered} $$ 如果我们代入$b=c-a$，于是得到： $$ \\begin{gathered} (f\\ast g)(c)=\\sum_{a}{f(a)\\cdot g(c-a)} \\end{gathered} $$ 在这里我们实际上已经推导出了卷积的离散形式\n 还记得我开头说的话吗，这种方法虽然好推导，但是它的含义已经偏移了传统意义上的卷积。但是它带给我们的启发是卷积的目的似乎是让整体满足某种约束条件，即上述的$a+b=c$。\n 下面用另一种视角来看待卷积过程。\n十根蜡烛的燃烧  本文思路源自卷积究竟卷了啥？视频，非常NICE\n  假设你有十根蜡烛，一根蜡烛燃烧为10分钟。现在问：在第0分钟点燃一根蜡烛，在第4分钟点燃4根蜡烛，在第5分钟点燃3根蜡烛，在第9分钟点燃2根蜡烛（哎，我就是不好好点，就是玩儿），经过$t$时刻剩下蜡烛的总质量？\n 先将蜡烛燃烧的函数$\\mathbf{g}$表示出来：\n 横坐标表示时间，纵坐标表示一根蜡烛的单位质量随燃烧时间的变化。点燃蜡烛的数量关于时间的关系可表示为函数$f$\n 其中纵坐标表示在该时刻新点燃蜡烛的数量。\n 求解该问题关键在于$t$时刻蜡烛的总质量不仅是该时刻新点燃蜡烛的质量乘以数量，还要加上经过$t$时间后，之前点燃蜡烛剩余的质量。\n 为便于求解，不妨先设$t$为6分钟。分析这个问题，我们不妨跟随$\\tau$变量的变化，来看各个蜡烛的质量。同时我们注意到十个蜡烛可分为四类：在第0分钟点燃的一根蜡烛，在第4分钟点燃的4根蜡烛，在第5分钟点燃的3根蜡烛，在第9分钟点燃的2根蜡烛。我们把他们分为四个“状态”，可以用列表列出每个“状态”随时间变化的剩余质量。并使用类似于$7^{n}$来表示该状态有$n$个蜡烛，下表展示了各种状态的蜡烛随时间变化的过程。（这个表示有点不太直观，改天改改）\n   $\\tau$ 0 1 2 3 4 5 6     状态1 $g(0)^{1}$ $g(1)^{1}$ $g(2)^{1}$ $g(3)^{1}$ $g(4)^{1}$ $g(5)^{1}$ $g(6)^{1}$   状态2 $g(-4)^{4}$ $g(-3)^{4}$ $g(-2)^{4}$ $g(-1)^{4}$ $g(0)^{4}$ $g(1)^{4}$ $g(2)^{4}$   状态3 $g(-5)^{3}$ $g(-4)^{3}$ $g(-3)^{3}$ $g(-2)^{3}$ $g(-1)^{3}$ $g(0)^{3}$ $g(1)^{3}$   状态4 $g(-9)^{2}$ $g(-8)^{2}$ $g(-7)^{2}$ $g(-6)^{2}$ $g(-5)^{2}$ $g(-4)^{2}$ $g(-3)^{2}$     对于这里的$g()$中的负数也是有含义的，由于$\\tau=0$时刻对于状态2的蜡烛是没有点燃的，但是在$4$后被点燃，即此时状态2的质量为$g(-4)^{4}$。\n 通过表格我们可以直观的看到在$t=6$时剩余蜡烛的质量等于： $$ \\begin{gathered} W(6)=1\\cdot g(6)+4\\cdot g(2)+3\\cdot g(1)+2\\cdot g(-3) \\end{gathered} $$\n 应该这样理解这个式子，在$\\tau=0$时响应（哎，我为什么说响应）/点燃的蜡烛，等到$\\tau=6$时，其剩余的质量应为$g(6)$；而在$\\tau=4$点燃的蜡烛，等到$\\tau=6$时，其质量为$g(6-\\tau)=g(2)$，因为对于这个状态的蜡烛而言，仅过了2S；其他同理。根据我们上述的推导，可以写出如下式子： $$ \\begin{aligned} W(6)\u0026amp;=f(0)g(6-0)+f(1)g(6-1)+\\dots+f(6)g(6-6)\\cr \u0026amp;=\\sum_{6}f(\\tau)g(6-\\tau)\\cr \\end{aligned} $$\n 我们将$t=6$推广到$t$于是便有 $$ \\begin{aligned} W(t)=\\sum_{t}\u0026amp;f(\\tau)g(t-\\tau)\\cr \u0026amp;\\Downarrow \\cr (f\\ast g)(t)=\\sum_{t}\u0026amp;f(\\tau)g(t-\\tau) \\end{aligned} $$ 下面我制作了一个动画（$Matlab\\ YES！！$）来帮助李姐，绿色线表示随时间变化的总剩余质量，图像里的$y$轴表示蜡烛的单位质量。\n 这个例子告诉我们卷积似乎意味着延时$\\to$倍加$\\to$求和的过程，它描述了一个输入信号$f(t)$，经过一个线性系统（其特征可以用单位冲激响应函数$g(t)$描述以后，输出的信号是什么。\n系统讲述  ","date":"2021-05-05T00:00:00Z","image":"https://puqing.work/p/%E5%8D%B7%E7%A7%AF%E4%B8%8E%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/image_hu405fba9f144bffb0b0bc188da03b80f4_147623_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/%E5%8D%B7%E7%A7%AF%E4%B8%8E%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/","title":"卷积与神经网络"},{"content":"Begin 《高等数学》都对曲面的参数方程解释少之又少，但我认为这是非常有意思的一种看法。\n下面请看解释法：\n在空间$\\mathbb{R}^{3} $中，曲线是三维连续函数，曲面是三维连续二元函数。\n$$ \\begin{aligned} l(t) \u0026amp;=(x(t),y(t),z(t))\\cr S(u,v) \u0026amp;=(x(u,v),y(u,v),z(u,z)) \\end{aligned} $$\n其中最简单的曲线和曲面是直线和平面，它们的方程是 $$ \\begin{aligned} \\begin{array}{c} l\\left ( t \\right ) =r_{0}+tr_{1} \\cr S(u,v)=r_{0}+ur_{1}+vr_{2} \\end{array} \\end{aligned} $$ 其中$r_{0},r_{1},r_{2}$均为向量，且$r_{1},r_{2}$是不共线的非零向量。\n直线 \r一条直线的参数方程\r\n其中$l(t)$比较好理解，即为$r_{1}$为直线的方向向量，$r_{0}$为直线的“位移向量”。\n平面 而平面实际上是就是一个直线的位移向量乘以了一个自由量，此时平面就$r_{1},r_{2}$张成的空间，$r_{0}$为平面是“位移向量”。\n\r一个平面的参数方程\r\n而平面的法向量$n=n_{1}\\times n_{2}$，点为$r_{0}$，就可转化为点法式。\n柱面 \r一个柱面的参数方程\r\n柱面指的就是一束平行的直线，它们的方向是非零向量$r$，起点是曲线$l(t)$上的各点。\n所以柱面的方程就是$S(u,v)=l(u)+vr$.\n我们称$r$为母线，$l(t)$为准线。\n锥面 锥面就是一束通过一点的直线，它们的起点是$r$,方向是$r$到曲线$l(t)$上的各点。\n所以锥面的方程就是$S(u,v)=r+v(l(u)-r)$，其中称$r$为锥面的顶点，$l(t)$为锥面的准线。\n旋转面 空间一条曲线$C:r(u)=(f(u),g(u),h(u))$，这里面$u\\in[a,b]$.曲线$C$绕$z$轴旋转而成的曲面称为绕$z$轴旋转的旋转面。\n在这旋转面上选取一点$M(x,y,z)$，由曲线上一点$M^{*}(f(u),g(u),h(h))$绕$z$轴旋转而成，则$z=h(u)$.有过点$M^{*}$垂直于$z$轴，交点为点$A(0,0,h(u))$，线段$AM^{*}$的长等于$AM$的长度，因而有： $$ x^{2}+y^{2}=(f(u))^{2}+(g(u))^{2}. $$ 从而可写出绕$z$轴的旋转面方程为 $$ \\begin{aligned} X(u,v)=(\\sqrt{(f(u))^{2}+(g(u))^{2}}\\cos{v},\\sqrt{(f(u))^{2}+(g(u))^{2}}\\sin{v},h(u)). \\end{aligned} $$ 类似地，可以写出绕$x,y$轴的方程： $$ \\begin{aligned} X(u,v)=(f(u),\\sqrt{(g(u))^{2}+(h(u))^{2}}\\cos{v},\\sqrt{(g(u))^{2}+(h(u))^{2}}\\sin{v}). \\end{aligned} $$\n$$ \\begin{aligned} X(u,v)=(\\sqrt{(f(u))^{2}+(h(u))^{2}}\\cos{v},g(u),\\sqrt{(f(u))^{2}+(h(u))^{2}}\\sin{v}). \\end{aligned} $$\n更一般的，若空间曲线$C:r(u)$绕过原点$O$的一条直线$L:\\frac{x}{l}=\\frac{y}{m}=\\frac{z}{n}$旋转，在曲线上任取一点$M(x,y,z)$，它由C上某一点$M^{*}$旋转相应角度得到，有关系式 $$ \\begin{aligned} \\left | \\overrightarrow{OM} = \\overrightarrow{OM^{*}}\\right |,\\overrightarrow{OM}\\cdot (l,m,n) = \\overrightarrow{OM^{*}}\\cdot (l,m,n) \\end{aligned} $$ 得到\n$$ \\begin{aligned} \\begin{cases} x^{2}+y^{2}+z^{2}=(f(u))^{2}+(g(u))^{2}+(h(u))^2,\\cr lx+my+nz=lf(u)+mg(u)+nh(u). \\end{cases} \\end{aligned} $$ 其实还有用旋转矩阵来看待旋转过程。\n待更\u0026hellip;\n应试有用技巧 判断是否为旋转面 判断方程是否为旋转面（仅在绕$x,y,z$轴旋转讨论），观察以上$(4),(5),(6)$式我们可以看到，若绕$z$轴旋转，$x,y$的系数是一样的，且为和的关系，绕$y,z$轴旋转也是一样的。这样我们就有：\n  若方程式中有两变量的系数一样，且为和的关系，则曲面是绕另一变量对应的轴的旋转面   判断是哪一曲线旋转而成 判读了是旋转面后还不行，还有判断是哪一曲线绕轴旋转。\n试想一旋转面$S$，我们从旋转面的旋转轴的垂直方向看过去，在一平面上将会是旋转面的纵切面，即为曲线$C$，拿例子来说：\n对于旋转面$C:x^{2}+y^{2}-z^{2}=1$很显然，这是一个旋转单叶双曲面。由上面技巧可知，绕$z$轴旋转。我们从$x$轴看过去，即令$x=0$，有方程组： $$ \\begin{aligned} \\begin{cases} y^{2}-z^{2}=1,\\cr x=0. \\end{cases} \\end{aligned} $$ 该式就是曲线$C$，同样的你也可以令$y=0$，同样可以得到旋转面的界面曲线。\n给曲线，求旋转面方程 给曲线更为抽象的表达，对于在$yOz$平面的曲线，我们有曲线$C:$ $$ \\begin{aligned} \\begin{cases} f(y,z)=0,\\cr x=0. \\end{cases} \\end{aligned} $$ 取曲线$C$上任意一点$M_{1}(0,y_{1},z_{1})$有$f(y_{1},z{1})=0$\n当曲线绕$z$轴旋转时，旋转到另一点$M(x,y,z)$，其$z$坐标不变，即$z=z_{1}$\n且与$z$轴的距离有关系： $$ x^{2}+y^{2}=x_{1}^{2}+y_{1}^{2}=y_{1}^{2} $$ 我们把公式$(11)$和$z=z_{1}$，带入到$f(y,z)=0$，有： $$ f(\\pm\\sqrt{x^{2}+y^{2}},z)=0 $$ 从以上推理公式可知，**曲线绕哪一轴旋转，对应的变量就不变，而另一个变量就换成以上形式**。\n好了，公式推完怎么用呢？请看例题。\n例：\n 将$xOy$坐标面上的抛物线$z^{2}=5x$绕$x$轴旋转一周，求所生成的旋转曲面的方程？\n 根据上面，曲线绕$x$轴旋转，即$x$不变，$z=\\pm\\sqrt{y^{2}+z^{2}}$，带入方程，得$y^{2}+z^{2}=5x$\n即所得结果。\n非特征\u0026quot;旋转面\u0026quot; 这个是旋转面题的变体，即各种二次曲面的标准式，待更\u0026hellip;\n参考 [1] 空间解析几何（第二版）\n[2] (柱面、锥面和旋转面)\n","date":"2021-03-07T00:00:00Z","image":"https://puqing.work/p/%E4%BB%8E%E5%8F%82%E6%95%B0%E6%96%B9%E7%A8%8B%E5%88%B0%E4%BA%8C%E6%AC%A1%E6%9B%B2%E9%9D%A2/gray_hub1cb6eb83d98dc27747e41c27741c43c_84777_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/%E4%BB%8E%E5%8F%82%E6%95%B0%E6%96%B9%E7%A8%8B%E5%88%B0%E4%BA%8C%E6%AC%A1%E6%9B%B2%E9%9D%A2/","title":"从参数方程到二次曲面"},{"content":"这是蓝桥杯训练第一道题：\n题目描述\nThis is the first problem for test. Since all we know the ASCII code, your job is simple: Input numbers and output corresponding messages.\n输入\nThe input will contain a list of positive integers separated by whitespaces(spaces, newlines, TABs). Please process to the end of file (EOF). The integers will be no less than 32.\n输出\nOutput the corresponding message. Note there is NOT a newline character in the end of output.\n样例输入\n72 101 108 108 111 44 32 119 111 114 108 100 33 样例输出\nHello, world!  首先是对示例程序的解释，如：\n#include\u0026lt;stdio.h\u0026gt;int main() { int a,b; while(~scanf(\u0026#34;%d%d\u0026#34;, \u0026amp;a, \u0026amp;b))printf(\u0026#34;%d\\n\u0026#34;,a+b); return 0; } 对~的解释：//scanf函数，假如要输入a，b两个数，都输入对了（“输入对了”是指输入的数字符合所定义的类型）就返回2，其中之一输入对的话就返回1，都输不对就返回0。所以，如果每次输入a、b都是对的，一直返回2，那就一直循环不止。要想达到我想要它停下就停下的方法就是在scanf前加个~。这个~的意思是将scanf的返回值取补码，大于零的所有整数的补码都是非零整数（真值），所以当a、b输入对了，返回了2给scanf，然后~将2变成了其他非零整数，也没事，都是真值，不影响while继续执行。而只有-1的补码是0，也就是说，当我不想再输入a、b值进行测试时，我可以按Ctrl+z（EOF）终止输入流直接返回-1（就是会返回-1，别问为什么）给scanf，然后scanf前的~可以把-1变成0，即，while(~-1)==while(0)，此时while循环终止。\n所以，while(scanf(“%d”,\u0026amp;a)==1)，也有EOF的功效，因为正确输入就返回1，不想输入了，就按Ctrl+z返回-1，就判断为不符合等于1 的条件，所以while不再执行。\n这里还有对EOF状态的解释：在不同系统的EOF所代表的值是不一样的，在Visual Studio 2017下为ctrl+c，windows下为ctrl+z，linux/unix下为ctrl+c或ctrl+d；\n解题 #include\u0026lt;stdio.h\u0026gt;int main() { int a[100]; int i; while ((scanf(\u0026#34;%d\u0026#34;, \u0026amp;a[i])) != EOF) //读入输入数据  { i++; } for (int j = 0; j \u0026lt; i; j++) { printf(\u0026#34;%c\u0026#34;, a[j]); } return 0; } ","date":"2021-02-28T00:00:00Z","image":"https://puqing.work/p/asciitochar/purple_hu301484a55e2bdd7ed997a5935b46de5f_91754_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/asciitochar/","title":"asciiToChar"},{"content":" 小学使出吃奶的劲才过网的排球，\n今天居然一拳轰飞了，不禁感Time。\n ","date":"2020-11-19T00:00:00Z","image":"https://puqing.work/p/child/pink_hu03635e06f7c5d6cd2cdf66ad1fdf7ee5_65981_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/child/","title":"Child"},{"content":"前言 此文将会回顾gobang开发过程以及其中遇到的困难，防止在开发的时候只有上帝和我知道逻辑，开发后只有上帝知道。\n初探 ​\t该程序是在看到有dalao仅用19行写出五子棋，便想尝试实现以下。\n​\t说实话刚想如何实现时是一头雾水，不知从何入手，想来想去还是从最简单的print环节开始。\ndawn()函数 ​\t首先是落子的记录方式，由于之前有开发控制台游戏的经历，所以就直接用数组来存储，这也给后面功能实现提供方便，当然也带来麻烦。\nvoid dawn(map[high][width]) { for (int i = 0; i \u0026lt; high; i++) { for (int j = 0; j \u0026lt; width; j++) { if (map[i][j] == 0) { _cprintf(\u0026#34; \u0026#34;); } else if (map[i][j] == 1) { _cprintf(\u0026#34;O\u0026#34;); } else { _cprintf(\u0026#34;@\u0026#34;); } if (j == (width - 1)) { _cprintf(\u0026#34;\\n\u0026#34;); } } } } ​\t一开始是这样写的，看上去没有问题，但一旦运行便会显露，由于二维数组在内存中是一维线性的，所以函数中二维数组应该用指针访问：\n*(map[i] + j)=0; 这样才正常工作。\n​\t这里还有一个细节问题，由于历史原因，定义的函数名要加下划线_，当然加不加还是要看你的编译器。\nmain()函数 ​\t有了绘图，接下来是改变数组内容，这比较好做：\ns=\u0026gt;start: 开始 e=\u0026gt;end: 结束 i=\u0026gt;inputoutput: 等待输入 o=\u0026gt;operation: 分辨输入 c=\u0026gt;condition: 判断是否有五棋 o1=\u0026gt;operation: 反应 s-\u0026gt;c-\u0026gt;e c(yes)-\u0026gt;e c(no)-\u0026gt;i-\u0026gt;o-\u0026gt;o1-\u0026gt;i while (sum()) { ch = getch();//等待输入  switch (ch) //分辨输入ASCll码  { case 119: //w  y--; break; case 115: //s  y++; break; case 97://a  x--; break; case 100://d  x++; break; case 32://\\r  if (mod == 1) { map[y][x] = i; i *= -1; } else { map[y][x] = i; ai(y, x); } break; case 113://q  mod *= -1; break; default: break; } } ​\t这里也有几个小地方值得注意，屏幕的x-y轴和数组的x-y不一样，在赋值时注意对应\nsum()函数 ​\t这个对我来说是一个难点。需要实现以下功能：\n  竖向判断连续五子\n  横向判断连续五子\n  两个斜方向判断连续五子\n  ​\t这个函数我尝试了许多方法，如求和判断，连续函数判断。但都因不能满足全部要求而pass掉。 ​这里想说一下连续函数判断：\n​\t逻辑很简单，遍历数组，若map[x][y]==map[x][y+1]便计数加一，横竖斜也类似，在测试过程中它的确有作用，当计数结果非常不符合预期，这是因为它会将每行的相同加在一起，解决办法还是有的，如创建数组存储，每行初始化。但代码十分臃肿，这跟我们采用数组数据结构是相关的。\n​\t最后解决问题是用了一个特别暴力的方法，但足够简洁，直观。\nfor (int i = 0; i \u0026lt; high; i++) { for (int j = 0; j \u0026lt; width - 4; j++) { if (map[i][j] == map[i][j + 1] \u0026amp;\u0026amp; map[i][j + 1] == map[i][j + 2] \u0026amp;\u0026amp; map[i][j + 2] == map[i][j + 3] \u0026amp;\u0026amp; map[i][j + 3] == map[i][j + 4] \u0026amp;\u0026amp; map[i][j] != 0) { return 0; } } } ​\temmm就这么暴力，其他方向亦可仿照。\nai()函数 ​\t来到了让我困惑了好久的AI模块。我一开始的想法是统计每个方向连续对手棋子个数，比出最多的一个。这就是根据我自己玩五指棋的方法来做。但以我现在知识很难将其代码化，还是数据结构的问题。就这样我给绕了进去，所以我选择放松放松。看到晚霞和蓝调，emm，来灵感了。\n​\t我转变了思路，AI以对手落子来判断，不仅减小判断范围，也很好表达。当然，这是以对手是进攻为前提的。\n还记的map是int类型吗，我可以让AI求对手落子的8个方向3格的和，找出最大值的对向便可以做出拦截动作。\n​\t问题又来了，如何表达最大值的对向，对于8个方向实际上是x+1，x，x-1和y+1, y , y-1的组合，你想到了什么，对的，for循环，在求出最值时，对for循环中的控制量取反便可。\n​\t细节：\n 1.对于AI落子可能落在已有棋的特殊情况，我的解决方法是，生成-2~2的随机量，直到落的地方是空的，这样还是有特殊情况，所以随机一次便改变对手落子的位置存储。\n2.在比较最大值时有一种特殊情况，便是最一开始，都为0时，这里的max存储变量在初始化时设为-1，便可规避。\n3.这里因为对手落子时对map的赋值是1，所以可以比大小来判断，这也是为什么在切换模式时只能让人类用白棋，后面可以加转换。\n ​\n​\t最后的效果还是非常不错的。\n重构 ​\t之前是将map定义在main函数中，其实定义在函数外便可规避传递二维数组所带来的一系列问题，便可直接用map[][]\n改进 ​\t受限于知识水平，代码还做不到dalao19行的优美。可以寻找更加好的数据结构，AI判断逻辑，赢家输出，空气墙回退。\n","date":"2020-09-25T00:00:00Z","image":"https://puqing.work/p/%E4%BA%94%E6%8C%87%E6%A3%8B%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/gobang_hub9be46289af43331cf33e9f47902b479_137651_120x120_fill_box_smart1_2.png","permalink":"https://puqing.work/p/%E4%BA%94%E6%8C%87%E6%A3%8B%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/","title":"五指棋程序开发笔记"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"2019-03-11T00:00:00Z","image":"https://puqing.work/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://puqing.work/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://puqing.work/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙉The Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } \u0026lt;style\u0026gt; .emojify { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; font-size: 2rem; vertical-align: middle; } @media screen and (max-width:650px) { .nowrap { display: block; margin: 25px 0; } } \u0026lt;/style\u0026gt;","date":"2019-03-05T00:00:00Z","image":"https://puqing.work/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://puqing.work/p/emoji-support/","title":"Emoji Support"}]